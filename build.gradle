plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'au.com.dius.pactworkshop'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    testImplementation("au.com.dius.pact.provider:junit5:4.6.5")
}

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    print 'Git hash: ' + stdout.toString().trim()
    return stdout.toString().trim()
}

def getGitBranch = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--abbrev-ref', 'HEAD'
        standardOutput = stdout
    }
    print 'Git branch: ' + stdout.toString().trim()
    return stdout.toString().trim()
}

test {
    useJUnitPlatform()

    systemProperty 'pact.provider.branch', getGitBranch()
    if (System.getProperty('pactPublishResults') == 'true') {
        print "Publishing verification results"
        systemProperty 'pact.provider.version', getGitHash()
        systemProperty 'pact.verifier.publishResults', 'true'
    }
}